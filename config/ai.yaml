---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-deploy
spec:
  replicas: 1
  minReadySeconds: 5
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: ai-container
  template:
    metadata:
      name: ai-deploy
      labels:
        app: ai-container
    spec:
      restartPolicy: Always
      terminationGracePeriodSeconds: 10
      volumes:
        - name: data
          hostPath:
            type: DirectoryOrCreate
            path: /var/www/k8s/data/tmp/ai/data/
      containers:
        - name: ai-container
          image: lss233/kirara-agent-framework:latest
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: data
              mountPath: /app/data/
          resources:
            requests:
              memory: 8Mi
              cpu: 200m
            limits:
              memory: 256Mi
              cpu: 1

---
apiVersion: v1
kind: Service
metadata:
  name: ai-svc
spec:
  selector:
    app: ai-container
  type: ClusterIP
  sessionAffinity: ClientIP
  ports:
    - name: sp
      port: 80
      targetPort: 8080

---
#自动扩缩
#https://access.redhat.com/documentation/zh-cn/openshift_container_platform/4.13/html/nodes/nodes-poai-autoscaling
#压力测试: kubectl run --rm -it --image=busybox:latest --restart=Never test -- /bin/sh -c "while sleep 0.01; do wget -q -O- http://ai-svc:80/test.html; done"
#需要给容器定义resources配置
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: hpa-ai
status:
  observedGeneration: 1
  currentReplicas: 1
  desiredReplicas: 1
  currentMetrics:
    - type: Resource
      resource:
        name: cpu
        current:
          averageUtilization: 0
          averageValue: 0
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: ai-deploy
  minReplicas: 1
  maxReplicas: 1 #最大的pod的数量
  metrics:
    - type: Resource
      resource:
        name: cpu
        target: #当pod的[name]使用率达到[resources.requests]的[averageUtilization]%时进行扩容
          type: Utilization
          averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 0 # 需要扩容时，立即扩容
      policies:
        - type: Percent
          value: 100
          periodSeconds: 15 # 每[periodSeconds]秒最大允许扩容数量为当前Pod数量的[value]%
        - type: Pods
          value: 1
          periodSeconds: 15 # 每[periodSeconds]秒最大允许扩容[value]个 Pod
      selectPolicy: Max # 使用以上两种扩容策略中算出来扩容 Pod 数量最大的
    scaleDown:
      stabilizationWindowSeconds: 300 # 需要缩容时，先观察[stabilizationWindowSeconds]秒，如果一直持续需要缩容才执行缩容
      policies:
        - type: Percent
          value: 100 # 允许缩掉[value]%的pod
          periodSeconds: 15
