# ql repo https://github.com/RayWangQvQ/BiliBiliToolPro.git "bili_task_"
# ql repo https://github.com/zero205/JD_tencent_scf.git "jd_|jx_|getJDCookie" "backUp|icon" "^jd[^_]|USER|sendNotify|sign_graphics_validate|JDJR|JDSign" "main"

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ql-sts
spec:
  serviceName: ql-svc
  replicas: 1
  minReadySeconds: 5
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: ql-container
  volumeClaimTemplates:
    - metadata:
        name: ql-data
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: local-path
        resources:
          requests:
            storage: 5Gi
  template:
    metadata:
      labels:
        app: ql-container
      annotations:
        changeRollingUpdate: ${K8S_QL}
    spec:
      restartPolicy: Always
      priorityClassName: low-pc
      terminationGracePeriodSeconds: 10
      initContainers:
        - name: wait-proxy
          image: alpine:latest
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -c
            - |
              set -e
              sed -i 's/dl-cdn.alpinelinux.org/mirrors.aliyun.com/g' /etc/apk/repositories
              apk add -f --no-cache curl
              maxTries=15
              while [ $maxTries -gt 0 ] && ! curl -sSf proxy-svc:80 > /dev/null;do
                  echo '等待proxy可用'
                  sleep 1
                  maxTries=$(( $maxTries - 1 ))
              done
              if [ $maxTries -le 0 ]; then
                  echo >&2 'error: 尝试多次连接proxy服务失败'
                  exit 1
              fi
              echo 'proxy已启动'
          resources:
            requests:
              memory: 32Mi
              cpu: 50m
            limits:
              memory: 256Mi
              cpu: 500m
      containers:
        - name: ql-container
          image: whyour/qinglong:latest
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: false
          ports:
            - name: cp
              containerPort: 5700
            - name: cp-pan
              containerPort: 80
          env:
            - name: TZ
              value: Asia/Shanghai
          volumeMounts:
            - name: ql-data
              mountPath: /ql/data
          command:
            - /bin/sh
            - -c
            - |
              cat >> docker/front.conf <<EOF
              #临时网盘,用于临时下载指定目录下的资源
              server {
                  listen 80;
                  listen [::]:80;

                  error_page 404 =200 /404.html;
                  error_page 500 502 503 504 =200 /50x.html;
                  location ~ /50x.html|/404.html {
                      proxy_pass http://proxy-svc:80;
                  }

                  location ~ ^/(\.user.ini|\.htaccess|\.git|\.svn|\.project|LICENSE|README.md){
                      return 404;
                  }

                  location / {
                      root /ql/data/pan/;
                      access_log off;
                  }
              }
              #配置REMOTE_ADDR头; 从IP链排除的ip(对应"listen 127.0.0.1:443"的配置; 如不排除ip(如cdn平台的ip),则proxy_add_x_forwarded_for和proxy_protocol_addr就会带上,导致真实ip被隐藏)
              #https://www.cloudflare.com/ips/
              set_real_ip_from 127.0.0.0/24;
              set_real_ip_from 172.1.0.0/16;
              set_real_ip_from 10.40.0.0/16;
              set_real_ip_from 10.41.0.0/16;
              set_real_ip_from 10.42.0.0/16;
              set_real_ip_from 10.43.0.0/16;
              set_real_ip_from 10.44.0.0/16;
              set_real_ip_from 173.245.48.0/20;
              set_real_ip_from 103.21.244.0/22;
              set_real_ip_from 103.22.200.0/22;
              set_real_ip_from 103.31.4.0/22;
              set_real_ip_from 141.101.64.0/18;
              set_real_ip_from 108.162.192.0/18;
              set_real_ip_from 190.93.240.0/20;
              set_real_ip_from 188.114.96.0/20;
              set_real_ip_from 197.234.240.0/22;
              set_real_ip_from 198.41.128.0/17;
              set_real_ip_from 162.158.0.0/15;
              set_real_ip_from 104.16.0.0/13;
              set_real_ip_from 104.24.0.0/14;
              set_real_ip_from 172.64.0.0/13;
              set_real_ip_from 131.0.72.0/22;
              set_real_ip_from 2400:cb00::/32;
              set_real_ip_from 2606:4700::/32;
              set_real_ip_from 2803:f800::/32;
              set_real_ip_from 2405:b500::/32;
              set_real_ip_from 2405:8100::/32;
              set_real_ip_from 2a06:98c0::/29;
              set_real_ip_from 2c0f:f248::/32;
              EOF
              mkdir -p /ql/data/pan/
              ./docker/docker-entrypoint.sh
          livenessProbe:
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 3
            exec:
              command: ["curl", "-sf", "http://127.0.0.1:5400/api/health"]
          readinessProbe:
            initialDelaySeconds: 5
            periodSeconds: 2
            timeoutSeconds: 1
            httpGet:
              scheme: HTTP
              port: cp
          resources:
            requests:
              memory: 64Mi
              cpu: 100m
            limits:
              memory: 512Mi
              cpu: 1

---
apiVersion: v1
kind: Service
metadata:
  name: ql-svc
spec:
  selector:
    app: ql-container
  clusterIP: None
  sessionAffinity: ClientIP
  ports:
    - name: sp
      port: 5700
    - name: sp-pan
      port: 80
