# kubectl create secret tls tls-secret --cert=data/cert/twbhub.com_top/cert.pem --key=data/cert/twbhub.com_top/key.pem
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: global
data:
  timezone: Etc/UTC

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: global
  namespace: kube-system
data:
  timezone: Etc/UTC
  notify-tg-token: 0123456789:AAxxxx

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: proxy-env
data:
  .env: |
    {
      "debug": true,
      "domain": "www.domain.com:80",
      "proxy": [
        {
          "name": "VLESS-TCP-XTLS-Vision-REALITY",
          "type": "vless",
          "server": "www.domain2.com",
          "port": "443",
          "tls": true,
          "udp": true,
          "skip-cert-verify": false,
          "client-fingerprint": "chrome",
          "alpn": ["h2", "http/1.1"],
          "sni": "www.domain3.com",
          "uuid": "xxxx",
          "flow": "xtls-rprx-vision",
          "network": "tcp",
          "reality-opts": {
            "public-key": "xxxx",
            "short-id": ""
          },
          "root": true
        },
        {
          "type": "vless",
          "server": "x.x.x.x",
          "port": "443",
          "uuid": "xxxx",
          "network": "ws",
          "ws-opts": {
            "path": "/ws-path",
            "headers": { "host": "www.domain4.com" }
          }
        }
      ],
      "db": {
        "type": "sqlite",
        "sqlite_path": "./dao/proxy.db",
        "mysql_host": "",
        "mysql_port": 0,
        "mysql_dbname": "",
        "mysql_username": "",
        "mysql_password": ""
      },
      "telegram": {
        "token": "0123456789:AAxxxx",
        "id": 123456789
      }
    }

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: frp
data:
  frps.toml: |
    bindPort = 443
    tcpmuxHTTPConnectPort = 22
    auth.token = "123456"

---
apiVersion: v1
kind: Secret
metadata:
  name: mysql-secret
type: Opaque
data:
  root-pwd: xxx #使用:  echo -n 'root' | base64

---
apiVersion: v1
kind: Secret
metadata:
  name: traefik-dashboard
data:
  users: |2 #userName:pwd
    xxx
---
apiVersion: v1
kind: Secret
metadata:
  name: tls-secret
type: kubernetes.io/tls
data:
  tls.crt: |
    xxx
  tls.key: |
    xxx
---
#查找dest的ip网站: https://bgp.tools; 需要h2 + tls1.3; 非套cf(域名后加/cdn-cgi/trace判断)
apiVersion: v1
kind: ConfigMap
metadata:
  name: xray-cm
data:
  config.json: |
    {
      "log": {
        "loglevel": "warning",
        "error": "/var/log/xray/error.log",
        "access": "/var/log/xray/access.log"
      },
      "routing": {
        "domainStrategy": "IPIfNonMatch",
        "rules": [
          {
            "type": "field",
            "ip": ["geoip:cn"],
            "outboundTag": "block"
          }
        ]
      },
      "inbounds": [
        {
          "port": 443,
          "protocol": "vless",
          "settings": {
            "clients": [
              {
                "id": "xxx-xxx-xxx-xxx-xxx",
                "flow": "xtls-rprx-vision"
              }
            ],
            "decryption": "none"
          },
          "streamSettings": {
            "network": "tcp",
            "security": "reality",
            "realitySettings": {
              "show": false,
              "dest": "www.tesla.com:443",
              "serverNames": ["my.com", "www.tesla.com"],
              "privateKey": "xxxxx",
              "shortIds": [""]
            }
          },
          "sniffing": {
            "enabled": true,
            "destOverride": ["http", "tls", "quic"],
            "routeOnly": true
          }
        }
      ],
      "outbounds": [
        {
          "protocol": "freedom",
          "tag": "direct"
        },
        {
          "protocol": "blackhole",
          "tag": "block"
        }
      ],
      "policy": {
        "levels": {
          "0": {
            "handshake": 2,
            "connIdle": 120
          }
        }
      }
    }

---
