#需配置Gateway API CRD(位于config/gateway-api.yaml)才能使用gateway.networking.k8s.io资源
#k3s已自动配置IngressRoute CRD
#route使用参考代码: https://github.com/kubernetes-sigs/gateway-api/tree/main/examples
#对tls设置sni规则时发现, 优先级:IngressRouteTCP > TLSRoute; 即优先级:IngressRoute模式 > Gateway API模式
#设置http规则时发现, 优先级:HTTPRoute > IngressRoute; 即优先级:Gateway API模式 > IngressRoute模式
#使用IngressRoute模式同时设置"IngressRouteTCP"的sni规则和"IngressRoute"验证https, 即优先级:IngressRoute > IngressRouteTCP

#traefik中间件(优先使用Gateway API标准设置而不是中间件设置; 如设置filters.type)================begin
--- #公用规则合并
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: common
spec:
  chain:
    middlewares:
      - name: worker-processes
      - name: limit-req
      - name: circuit-breaker
--- #https规则合并
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: http
spec:
  chain:
    middlewares:
      - name: common
      # - name: http2https
      - name: compress
      - name: add-header
      - name: error-4xx
      - name: error-5xx
--- #并行
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: worker-processes
spec:
  inFlightReq:
    amount: 10
--- #限流
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: limit-req
spec:
  rateLimit: # 1s内接收的平均请求数不大于average，高峰最大burst
    average: 100
    burst: 200
--- #熔断
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: circuit-breaker
spec:
  circuitBreaker:
    expression: LatencyAtQuantileMS(70.0) > 2000 || NetworkErrorRatio() > 0.5 || ResponseCodeRatio(500, 600, 0, 600) > 0.5 #达70.0%(要有小数点)流量的网络延迟超2秒, 或网络错误率达50%, 或50%流量返回5XX 触发
--- #强制转https(traefik初始配置已设, 这冗余)
# apiVersion: traefik.io/v1alpha1
# kind: Middleware
# metadata:
#   name: http2https
# spec:
#   redirectScheme:
#     scheme: https
#     permanent: true #?308:307 重定向
--- #gzip压缩
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: compress
spec:
  compress: {}
--- #响应头
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: add-header
spec:
  headers:
    frameDeny: true #禁止外源iframes,减少点击劫持
    customFrameOptionsValue: SAMEORIGIN #禁止外源iframes,减少点击劫持
    customBrowserXSSValue: "1; mode=block" #防XSS攻击
    contentTypeNosniff: true #禁止服务器自动解析资源类型
    stsIncludeSubdomains: true #启用HSTS;要求浏览器总是通过 https
    stsPreload: true #启用HSTS;要求浏览器总是http跳转到https
    customResponseHeaders:
      Wall: "Hi! Welcome!"
      Strict-Transport-Security: "max-age=31536000; includeSubDomains; preload" #启用HSTS;要求浏览器总是通过 https
      X-XSS-Protection: "0" #禁用旧版XSS过滤器（可能引入漏洞）
      Alt-Svc: 'h3=":443"; h3-29=":443"' #备选服务
      X-Content-Type-Options: "nosniff" #禁止服务器自动解析资源类型
      Content-Security-Policy: "default-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self'; connect-src 'self'; frame-src 'none'" #关键CSP策略
      Referrer-Policy: "no-referrer-when-downgrade" # 控制 Referer 头泄露
--- #错误页
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: error-4xx
spec:
  errors:
    status:
      - "402-499"
    query: /404.html
    service:
      name: pan-svc
      port: 80
--- #错误页
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: error-5xx
spec:
  errors:
    status:
      - "500-599"
    query: /50x.html
    service:
      name: pan-svc
      port: 80
--- #TCP中间件
apiVersion: traefik.io/v1alpha1
kind: MiddlewareTCP
metadata:
  name: inflightconn
spec:
  inFlightConn:
    amount: 10
--- #密码授权验证
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: auth
spec:
  basicAuth:
    secret: traefik-dashboard
    removeHeader: true #删除验证头
#================end

---
apiVersion: traefik.io/v1alpha1
kind: TLSOption
metadata:
  name: tls-conf
spec:
  minVersion: VersionTLS12 # 最低TLS版本
  cipherSuites: # 允许的加密套件
    - TLS_AES_256_GCM_SHA384 #TLS1.3
    - TLS_CHACHA20_POLY1305_SHA256 #TLS1.3
    - TLS_AES_128_GCM_SHA256 #TLS1.3
    - ECDHE-ECDSA-AES256-GCM-SHA384 #TLS1.2
    - ECDHE-RSA-AES256-GCM-SHA384 #TLS1.2
    - ECDHE-ECDSA-CHACHA20-POLY1305 #TLS1.2
    - ECDHE-RSA-CHACHA20-POLY1305 #TLS1.2
    - ECDHE-ECDSA-AES128-GCM-SHA256 #TLS1.2
    - ECDHE-RSA-AES128-GCM-SHA256 #TLS1.2
  curvePreferences:
    - X25519
    - CurveP256
    - CurveP384
  sniStrict: true # 是否强制SNI匹配
  preferServerCipherSuites: true # 优先使用服务器端加密套件
---
apiVersion: gateway.networking.k8s.io/v1
kind: GatewayClass
metadata:
  name: traefik-gc
spec:
  controllerName: traefik.io/gateway-controller
---
apiVersion: gateway.networking.k8s.io/v1
kind: Gateway
metadata:
  name: traefik-gtw
spec:
  gatewayClassName: traefik-gc
  # addresses:
  #   - value: "xxx.xxx.xxx.xxx" #绑定ip或网卡
  listeners:
    - name: ssh
      port: 2222
      protocol: TCP
      allowedRoutes:
        kinds:
          - kind: TCPRoute
    - name: sni-frp
      protocol: TLS
      port: 443
      hostname: "frp.twbhub.top"
      tls:
        mode: Passthrough #透传TLS,用于四层网络SNI分流
    - name: sni-xray-r
      protocol: TLS
      port: 443
      hostname: "r.404502.xyz"
      tls:
        mode: Passthrough
    - name: sni-xray-x
      protocol: TLS
      port: 443
      hostname: "x.404502.xyz"
      tls:
        mode: Passthrough
    - name: sni-xray-xr
      protocol: TLS
      port: 443
      hostname: "xr.404502.xyz"
      tls:
        mode: Passthrough
    - name: web
      protocol: HTTP
      port: 80
    - name: websecure-main
      protocol: HTTPS
      port: 443
      hostname: twbhub.top
      tls:
        mode: Terminate
        certificateRefs:
          - name: tls-secret #也可用traefik-TLSStore等方式配置
    - name: websecure
      protocol: HTTPS
      port: 443
      hostname: "*.twbhub.top"
      tls:
        mode: Terminate
        options:
          kind: TLSOption
          name: tls-conf
          group: traefik.io
        certificateRefs:
          - name: tls-secret
    - name: xray-main
      protocol: HTTPS
      port: 443
      hostname: 404502.xyz
      tls:
        mode: Terminate
        options:
          kind: TLSOption
          name: tls-conf
          group: traefik.io
        certificateRefs:
          - name: xray-secret
    - name: xray-www
      protocol: HTTPS
      port: 443
      hostname: www.404502.xyz
      tls:
        mode: Terminate
        options:
          kind: TLSOption
          name: tls-conf
          group: traefik.io
        certificateRefs:
          - name: xray-secret

--- #SSH流量
apiVersion: gateway.networking.k8s.io/v1alpha2
kind: TCPRoute
metadata:
  name: frp-ssh
  annotations:
    traefik.ingress.kubernetes.io/router.tcp.middlewares: inflightconn@kubernetescrd #因为TCPRoute无法使用traefik中间件,使用在此配置
spec:
  parentRefs:
    - name: traefik-gtw
      sectionName: ssh
  rules:
    - backendRefs:
        - name: frp-svc
          port: 22
--- #frp-http流量
apiVersion: gateway.networking.k8s.io/v1alpha2
kind: TLSRoute
metadata:
  name: frp-http
spec:
  parentRefs:
    - name: traefik-gtw
      sectionName: sni-frp
  hostnames:
    - frp.twbhub.top
  rules:
    - backendRefs:
        - name: frp-svc
          port: 443
--- #xray流量r
apiVersion: gateway.networking.k8s.io/v1alpha2
kind: TLSRoute
metadata:
  name: xray-r
spec:
  parentRefs:
    - name: traefik-gtw
      sectionName: sni-xray-r
  hostnames:
    - r.404502.xyz
  rules:
    - backendRefs:
        - name: xray-svc
          port: 443
--- #xray流量x
apiVersion: gateway.networking.k8s.io/v1alpha2
kind: TLSRoute
metadata:
  name: xray-x
spec:
  parentRefs:
    - name: traefik-gtw
      sectionName: sni-xray-x
  hostnames:
    - x.404502.xyz
  rules:
    - backendRefs:
        - name: xray-svc
          port: 80
--- #xray流量xr
apiVersion: gateway.networking.k8s.io/v1alpha2
kind: TLSRoute
metadata:
  name: xray-xr
spec:
  parentRefs:
    - name: traefik-gtw
      sectionName: sni-xray-xr
  hostnames:
    - xr.404502.xyz
  rules:
    - backendRefs:
        - name: xray-svc
          port: 8080
--- #xray-主域名
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: xray-main
spec:
  parentRefs:
    - name: traefik-gtw
      sectionName: xray-main
  hostnames:
    - 404502.xyz
  rules:
    - filters:
        - type: ExtensionRef
          extensionRef:
            group: traefik.io
            kind: Middleware
            name: http
        - type: RequestRedirect
          requestRedirect:
            hostname: xr.404502.xyz #回落假页面
            statusCode: 301
      backendRefs:
--- #xray-www
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: xray-main-www
spec:
  parentRefs:
    - name: traefik-gtw
      sectionName: xray-www
  hostnames:
    - www.404502.xyz
  rules:
    - filters:
        - type: ExtensionRef
          extensionRef:
            group: traefik.io
            kind: Middleware
            name: http
        - type: RequestRedirect
          requestRedirect:
            hostname: xr.404502.xyz
            statusCode: 301
      backendRefs:
--- #traefik面板
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: dashboard
spec:
  parentRefs:
    - name: traefik-gtw
      sectionName: websecure
    - name: traefik-gtw
      sectionName: web
  hostnames:
    - admin.twbhub.top
    - admin.cc.cc
  rules:
    - filters:
        - type: ExtensionRef #能设置各种功能,如重定向、流量复制等,不一定要用Traefik中间件
          extensionRef:
            group: traefik.io
            kind: Middleware
            name: http
        - type: ExtensionRef
          extensionRef:
            group: traefik.io
            kind: Middleware
            name: auth
      matches:
        - path:
            type: PathPrefix
            value: /
      backendRefs:
        - name: api@internal
          kind: TraefikService
          weight: 100 #权重设置,可用于灰度发布(金丝雀),一般设定cookie/HTTP头 从而判断是否进灰度
      timeouts:
        request: 60s #总响应超时
        backendRequest: 30s #后端响应超时
--- #网盘
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: pan
spec:
  parentRefs:
    - name: traefik-gtw
      sectionName: websecure
    - name: traefik-gtw
      sectionName: web
  hostnames:
    - pan.twbhub.top
    - pan.cc.cc
  rules:
    - filters:
        - type: ExtensionRef
          extensionRef:
            group: traefik.io
            kind: Middleware
            name: http
      backendRefs:
        - name: pan-svc
          port: 80
--- #订阅
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: proxy
spec:
  parentRefs:
    - name: traefik-gtw
      sectionName: websecure
  hostnames:
    - www.twbhub.top
    - clash.twbhub.top
  rules:
    - filters:
        - type: ExtensionRef
          extensionRef:
            group: traefik.io
            kind: Middleware
            name: http
      matches:
        - method: GET #限制请求方法
        - method: POST
      backendRefs:
        - name: proxy-svc
          port: 80
--- #AI
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: ai
spec:
  parentRefs:
    - name: traefik-gtw
      sectionName: websecure
  hostnames:
    - ai.twbhub.top
  rules:
    - filters:
        - type: ExtensionRef
          extensionRef:
            group: traefik.io
            kind: Middleware
            name: common
      backendRefs:
        - name: ai-svc
          port: 80
--- #小程序
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: dating
spec:
  parentRefs:
    - name: traefik-gtw
      sectionName: websecure
  hostnames:
    - dating.twbhub.top
  rules:
    - filters:
        - type: ExtensionRef
          extensionRef:
            group: traefik.io
            kind: Middleware
            name: http
      matches:
        - method: GET
        - method: POST
      backendRefs:
        - name: dating-svc
          port: 80
--- #青龙面板
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: ql
spec:
  parentRefs:
    - name: traefik-gtw
      sectionName: websecure
  hostnames:
    - ql.twbhub.top
  rules:
    - filters:
        - type: ExtensionRef
          extensionRef:
            group: traefik.io
            kind: Middleware
            name: http
      backendRefs:
        - name: ql-svc
          port: 80
