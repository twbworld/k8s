
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: trojan-go-deploy
spec:
  replicas: 1
  minReadySeconds: 5
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: trojan-go-container
  template:
    metadata:
      name: trojan-go-deploy
      labels:
        app: trojan-go-container
      annotations:
        changeRollingUpdate: ${K8S_TROJAN_GO}
    spec:
      restartPolicy: Always
      terminationGracePeriodSeconds: 10
      volumes:
        - name: cm
          configMap:
            name: trojan-go-cm
        - name: tls
          secret:
            secretName: tls-secret
      initContainers:
        - name: wait-mysql
          image: mysql:8.0-debian
          imagePullPolicy: IfNotPresent
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: root-pwd
          command:
            - sh
            - -c
            - |-
              set -e
              maxTries=15
              while [ $maxTries -gt 0 ] && ! mysqladmin ping --connect-timeout=3 -s -hmysql-svc -uroot -p$MYSQL_ROOT_PASSWORD;do
                  echo '等待mysql可用'
                  sleep 1
                  maxTries=$(( $maxTries - 1 ))
              done
              if [ $maxTries -le 0 ]; then
                  echo >&2 'error: 尝试多次连接mysql服务失败'
                  exit 1
              fi
              echo 'mysql已启动'
        - name: wait-proxy
          image: alpine:latest
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -c
            - |
              set -e
              sed -i 's/dl-cdn.alpinelinux.org/mirrors.aliyun.com/g' /etc/apk/repositories
              apk add -f --no-cache curl
              maxTries=15
              while [ $maxTries -gt 0 ] && ! curl -sSf proxy-svc:8080 > /dev/null;do
                  echo '等待proxy可用'
                  sleep 1
                  maxTries=$(( $maxTries - 1 ))
              done
              if [ $maxTries -le 0 ]; then
                  echo >&2 'error: 尝试多次连接proxy服务失败'
                  exit 1
              fi
              echo 'proxy已启动'
      containers:
        - name: trojan-go-container
          image: p4gefau1t/trojan-go:latest
          imagePullPolicy: IfNotPresent
          ports:
            - name: cp
              containerPort: 443
          volumeMounts:
            - name: cm
              mountPath: /etc/trojan-go/
            - name: tls
              mountPath: /root/cert/
          livenessProbe:
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 3
            tcpSocket:
              port: cp
          resources:
            requests:
              memory: 64Mi
              cpu: 100m
            limits:
              memory: 512Mi
              cpu: 600m

---
apiVersion: v1
kind: Service
metadata:
  name: trojan-go-svc
spec:
  selector:
    app: trojan-go-container
  type: ClusterIP
  sessionAffinity: ClientIP
  ports:
    - name: sp
      port: 443


---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: hpa-trojan-go
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: trojan-go-deploy
  minReplicas: 1
  maxReplicas: 4
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 0
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
      - type: Pods
        value: 2
        periodSeconds: 15
      selectPolicy: Max
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
status:
  observedGeneration: 1
  currentReplicas: 1
  desiredReplicas: 1
  currentMetrics:
  - type: Resource
    resource:
      name: cpu
      current:
        averageUtilization: 0
        averageValue: 0
